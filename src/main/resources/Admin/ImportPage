<?xml version="1.0" encoding="ISO-8859-1"?>

<xwikidoc>
<web>Admin</web>
<name>ImportPage</name>
<language></language>
<defaultLanguage>fr</defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>xwiki:XWiki.LudovicDubost</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>xwiki:XWiki.LudovicDubost</contentAuthor>
<creationDate>1218616961000</creationDate>
<date>1218625660000</date>
<contentUpdateDate>1219338132000</contentUpdateDate>
<version>1.1</version>
<title></title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/1.0</syntaxId>
<object>
<class>
<name>XWiki.TagClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<tags>
<cache>0</cache>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>tags</name>
<number>1</number>
<prettyName>Tags</prettyName>
<relationalStorage>1</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>30</size>
<unmodifiable>0</unmodifiable>
<values></values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</tags>
</class>
<name>Admin.ImportPage</name>
<number>0</number>
<className>XWiki.TagClass</className>
<property>
<tags/>
</property>
</object>
<content>1.1 Import Page

&lt;%

import com.xpn.xwiki.*;
import com.xpn.xwiki.doc.*;
import com.xpn.xwiki.plugin.packaging.*;

finalPageName = ""

def updateDoc(String newname, String xml, String type, XWikiContext context) {
    def prevDoc =  context.getWiki().getDocument(newname, context);
    def prevArchive = prevDoc.getDocumentArchive();
    if (prevDoc.isNew()||((type!="NOOVERVERSIONS")&amp;&amp;(type!="NOOVERNOVERSIONS"))) {
     def fdoc = new XWikiDocument()
     fdoc.fromXML(xml);
     // We need to verify the document has the right name
     // Otherwise we might override something we don't expect
     if ((newname!="")&amp;&amp;(fdoc.fullName!=newname)) {
       fdoc = fdoc.copyDocument(newname, context);
     }
     finalPageName =  fdoc.getFullName()
    
     if (type=="ADDVERSION") {
       fdoc.setDocumentArchive(prevArchive);
       context.getWiki().saveDocument(fdoc, context);
       if (prevDoc.isNew()) {
        fdoc.resetArchive(context);
       }
      return 1;
     } else {
      def pack = new Package()
      if ((type=="NOOVERVERSIONS")||(type=="OVERVERSIONS"))
       pack.setWithVersions(true)
      else
       pack.setWithVersions(false)
      pack.setBackupPack(true)
      pack.add(fdoc, 0, context)
      return pack.install(context)
     }    
    } else {
       return -1000;
    }
 }

if (request.get("name")!=null) {
 def fupl= xwiki.get("fileupload");
 def myfiles = fupl.getFileItems();
 def xml = fupl.getFileItem("file");
 def fName = fupl.getFileName("file");
 def docName = fupl.getFileItem("name");
 def type = fupl.getFileItem("type");
 def ret = updateDoc(docName, xml, type, context.context);
 if (ret &lt; 0) {
   if (ret==-1000)
    println "Document already exists and overwrite was not specified."; 
   else
    println "Document could not be imported with error ${ret}."; 
 } else {
   println "Document has been imported properly: [${finalPageName}]."
 }
} else {
%&gt; 
&lt;form action="" enctype="multipart/form-data" method="post"&gt;
&lt;table border="0"&gt;
&lt;tr&gt;
&lt;td&gt;Page Name to save to:&lt;/td&gt;&lt;td&gt;&lt;input type="text" name="name" size="60" /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Type:&lt;/td&gt;&lt;td&gt;
&lt;input type="radio" name="type" value="NOOVERVERSIONS" checked /&gt; Do Not overwrite with versions
&lt;input type="radio" name="type" value="NOOVERNOVERSIONS" /&gt; Do Not overwrite without versions
&lt;br /&gt;
&lt;input type="radio" name="type" value="ADDVERSION" /&gt; Add version 
&lt;input type="radio" name="type" value="OVERVERSIONS" /&gt; Overwrite with version 
&lt;input type="radio" name="type" value="OVERNOVERSIONS" /&gt; Overwrite without versions  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;File:&lt;/td&gt;&lt;td&gt;&lt;input type="file" name="file" size="60" /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td colspan="2" align="center"&gt;
&lt;input type="submit" name="Import" /&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/form&gt;
&lt;%
}
%&gt;</content>
</xwikidoc>
