<?xml version="1.0" encoding="ISO-8859-1"?>

<xwikidoc>
<web>Admin</web>
<name>ExportFromDateGroovy</name>
<language></language>
<defaultLanguage>fr</defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>xwiki:XWiki.LudovicDubost</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1218626771000</creationDate>
<date>1220211982000</date>
<contentUpdateDate>1220211982000</contentUpdateDate>
<version>5.1</version>
<title></title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/1.0</syntaxId>
<object>
<class>
<name>XWiki.TagClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<tags>
<cache>0</cache>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>tags</name>
<number>1</number>
<prettyName>Tags</prettyName>
<relationalStorage>1</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>30</size>
<unmodifiable>0</unmodifiable>
<values></values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</tags>
</class>
<name>Admin.ExportFromDateGroovy</name>
<number>0</number>
<className>XWiki.TagClass</className>
<property>
<tags/>
</property>
</object>
<content>
import com.xpn.xwiki.*;
import com.xpn.xwiki.plugin.packaging.*;
import org.apache.commons.lang.StringUtils;

public class Test3 {

def result = ""

public addToResult(str) {
  result = "${result}${str}\n";
} 

public String export(context, xwiki, request, response) {
 result = "";
 addToResult("Starting export")
 addToResult("Creating package")
 def pack = new Package()
 if (request.versions=="1")
  pack.setWithVersions(true)
 else
  pack.setWithVersions(false)
 if (request.backup=="1")
  pack.setBackupPack(true)
 else
  pack.setBackupPack(false)

 addToResult("Adding documents")
 def sql = ""
 if (request.date!="") {
  def sqldate = "doc.date&gt;'$request.date'"
  if (sql=="")
   sql += "where ${sqldate}"
  else
   sql += " and ${sqldate}" 
 }
 if (request.space!="") {
  def spacelist1 = StringUtils.split(request.space," ,")
  def spacelist = StringUtils.join(spacelist1,"','")
  def sqlspace = "doc.space in ('${spacelist}')"
  if (sql=="")
   sql += "where ${sqlspace}"
  else
   sql += " and ${sqlspace}" 
 }

 addToResult(sql);
 def start = 0
 def nb = 0
 if (request.start) {
   start = xwiki.parseInt(request.start)
   if (request.end) {
    nb = xwiki.parseInt(request.end) - start + 1
   }
 }
 for(docName in xwiki.searchDocuments(sql, nb, start)){
  addToResult("* ${docName}")
  if (request.confirm)
   pack.add(xwiki.getDocument(docName).document, 0, context.context)
 }

 if (request.confirm) {
   try {
    response.setContentType("application/xwiki")
    pack.export(response.getOutputStream(), context.context)
    context.setFinished(true)
   } catch (Exception e) {
    addToResult("Error exporting")
    addToResult(e.getMessage())
   }
   addToResult("Finished.")
 }
 return result;
}

}</content>
</xwikidoc>
